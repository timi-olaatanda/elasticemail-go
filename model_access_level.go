/*
Elastic Email REST API

This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

API version: 4.0.0
Contact: support@elasticemail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ElasticEmail

import (
	"encoding/json"
	"fmt"
)

// AccessLevel the model 'AccessLevel'
type AccessLevel string

// List of AccessLevel
const (
	NONE_ACCESS_LEVEL                     AccessLevel = "None"
	VIEW_ACCOUNT_ACCESS_LEVEL             AccessLevel = "ViewAccount"
	VIEW_CONTACTS_ACCESS_LEVEL            AccessLevel = "ViewContacts"
	VIEW_FORMS_ACCESS_LEVEL               AccessLevel = "ViewForms"
	VIEW_TEMPLATES_ACCESS_LEVEL           AccessLevel = "ViewTemplates"
	VIEW_CAMPAIGNS_ACCESS_LEVEL           AccessLevel = "ViewCampaigns"
	VIEW_CHANNELS_ACCESS_LEVEL            AccessLevel = "ViewChannels"
	VIEW_AUTOMATIONS_ACCESS_LEVEL         AccessLevel = "ViewAutomations"
	VIEW_SURVEYS_ACCESS_LEVEL             AccessLevel = "ViewSurveys"
	VIEW_SETTINGS_ACCESS_LEVEL            AccessLevel = "ViewSettings"
	VIEW_BILLING_ACCESS_LEVEL             AccessLevel = "ViewBilling"
	VIEW_SUB_ACCOUNTS_ACCESS_LEVEL        AccessLevel = "ViewSubAccounts"
	VIEW_USERS_ACCESS_LEVEL               AccessLevel = "ViewUsers"
	VIEW_FILES_ACCESS_LEVEL               AccessLevel = "ViewFiles"
	VIEW_REPORTS_ACCESS_LEVEL             AccessLevel = "ViewReports"
	MODIFY_ACCOUNT_ACCESS_LEVEL           AccessLevel = "ModifyAccount"
	MODIFY_CONTACTS_ACCESS_LEVEL          AccessLevel = "ModifyContacts"
	MODIFY_FORMS_ACCESS_LEVEL             AccessLevel = "ModifyForms"
	MODIFY_TEMPLATES_ACCESS_LEVEL         AccessLevel = "ModifyTemplates"
	MODIFY_CAMPAIGNS_ACCESS_LEVEL         AccessLevel = "ModifyCampaigns"
	MODIFY_CHANNELS_ACCESS_LEVEL          AccessLevel = "ModifyChannels"
	MODIFY_AUTOMATIONS_ACCESS_LEVEL       AccessLevel = "ModifyAutomations"
	MODIFY_SURVEYS_ACCESS_LEVEL           AccessLevel = "ModifySurveys"
	MODIFY_FILES_ACCESS_LEVEL             AccessLevel = "ModifyFiles"
	EXPORT_ACCESS_LEVEL                   AccessLevel = "Export"
	SEND_SMTP_ACCESS_LEVEL                AccessLevel = "SendSmtp"
	SEND_SMS_ACCESS_LEVEL                 AccessLevel = "SendSMS"
	MODIFY_SETTINGS_ACCESS_LEVEL          AccessLevel = "ModifySettings"
	MODIFY_BILLING_ACCESS_LEVEL           AccessLevel = "ModifyBilling"
	MODIFY_PROFILE_ACCESS_LEVEL           AccessLevel = "ModifyProfile"
	MODIFY_SUB_ACCOUNTS_ACCESS_LEVEL      AccessLevel = "ModifySubAccounts"
	MODIFY_USERS_ACCESS_LEVEL             AccessLevel = "ModifyUsers"
	SECURITY_ACCESS_LEVEL                 AccessLevel = "Security"
	MODIFY_LANGUAGE_ACCESS_LEVEL          AccessLevel = "ModifyLanguage"
	VIEW_SUPPORT_ACCESS_LEVEL             AccessLevel = "ViewSupport"
	SEND_HTTP_ACCESS_LEVEL                AccessLevel = "SendHttp"
	MODIFY2_FA_ACCESS_LEVEL               AccessLevel = "Modify2FA"
	MODIFY_SUPPORT_ACCESS_LEVEL           AccessLevel = "ModifySupport"
	VIEW_CUSTOM_FIELDS_ACCESS_LEVEL       AccessLevel = "ViewCustomFields"
	MODIFY_CUSTOM_FIELDS_ACCESS_LEVEL     AccessLevel = "ModifyCustomFields"
	MODIFY_WEB_NOTIFICATIONS_ACCESS_LEVEL AccessLevel = "ModifyWebNotifications"
	EXTENDED_LOGS_ACCESS_LEVEL            AccessLevel = "ExtendedLogs"
	VERIFY_EMAILS_ACCESS_LEVEL            AccessLevel = "VerifyEmails"
	VIEW_EMAIL_VERIFICATIONS_ACCESS_LEVEL AccessLevel = "ViewEmailVerifications"
	VIEW_MARKETING_ACCESS_LEVEL           AccessLevel = "ViewMarketing"
	VIEW_EMAIL_API_ACCESS_LEVEL           AccessLevel = "ViewEmailApi"
	VIEW_INBOUND_ACCESS_LEVEL             AccessLevel = "ViewInbound"
)

// All allowed values of AccessLevel enum
var AllowedAccessLevelEnumValues = []AccessLevel{
	"None",
	"ViewAccount",
	"ViewContacts",
	"ViewForms",
	"ViewTemplates",
	"ViewCampaigns",
	"ViewChannels",
	"ViewAutomations",
	"ViewSurveys",
	"ViewSettings",
	"ViewBilling",
	"ViewSubAccounts",
	"ViewUsers",
	"ViewFiles",
	"ViewReports",
	"ModifyAccount",
	"ModifyContacts",
	"ModifyForms",
	"ModifyTemplates",
	"ModifyCampaigns",
	"ModifyChannels",
	"ModifyAutomations",
	"ModifySurveys",
	"ModifyFiles",
	"Export",
	"SendSmtp",
	"SendSMS",
	"ModifySettings",
	"ModifyBilling",
	"ModifyProfile",
	"ModifySubAccounts",
	"ModifyUsers",
	"Security",
	"ModifyLanguage",
	"ViewSupport",
	"SendHttp",
	"Modify2FA",
	"ModifySupport",
	"ViewCustomFields",
	"ModifyCustomFields",
	"ModifyWebNotifications",
	"ExtendedLogs",
	"VerifyEmails",
	"ViewEmailVerifications",
	"ViewMarketing",
	"ViewEmailApi",
	"ViewInbound",
}

func (v *AccessLevel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AccessLevel(value)
	for _, existing := range AllowedAccessLevelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AccessLevel", value)
}

// NewAccessLevelFromValue returns a pointer to a valid AccessLevel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccessLevelFromValue(v string) (*AccessLevel, error) {
	ev := AccessLevel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AccessLevel: valid values are %v", v, AllowedAccessLevelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccessLevel) IsValid() bool {
	for _, existing := range AllowedAccessLevelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AccessLevel value
func (v AccessLevel) Ptr() *AccessLevel {
	return &v
}

type NullableAccessLevel struct {
	value *AccessLevel
	isSet bool
}

func (v NullableAccessLevel) Get() *AccessLevel {
	return v.value
}

func (v *NullableAccessLevel) Set(val *AccessLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessLevel(val *AccessLevel) *NullableAccessLevel {
	return &NullableAccessLevel{value: val, isSet: true}
}

func (v NullableAccessLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
